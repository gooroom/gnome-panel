/*
 * Generated by gdbus-codegen 2.57.2 from org.gnome.ScreenSaver.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __GP_SCREENSAVER_GEN_H__
#define __GP_SCREENSAVER_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.ScreenSaver */

#define GP_TYPE_SCREENSAVER_GEN (gp_screensaver_gen_get_type ())
#define GP_SCREENSAVER_GEN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GP_TYPE_SCREENSAVER_GEN, GpScreensaverGen))
#define GP_IS_SCREENSAVER_GEN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GP_TYPE_SCREENSAVER_GEN))
#define GP_SCREENSAVER_GEN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GP_TYPE_SCREENSAVER_GEN, GpScreensaverGenIface))

struct _GpScreensaverGen;
typedef struct _GpScreensaverGen GpScreensaverGen;
typedef struct _GpScreensaverGenIface GpScreensaverGenIface;

struct _GpScreensaverGenIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_lock) (
    GpScreensaverGen *object,
    GDBusMethodInvocation *invocation);

};

GType gp_screensaver_gen_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gp_screensaver_gen_interface_info (void);
guint gp_screensaver_gen_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gp_screensaver_gen_complete_lock (
    GpScreensaverGen *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void gp_screensaver_gen_call_lock (
    GpScreensaverGen *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gp_screensaver_gen_call_lock_finish (
    GpScreensaverGen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gp_screensaver_gen_call_lock_sync (
    GpScreensaverGen *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GP_TYPE_SCREENSAVER_GEN_PROXY (gp_screensaver_gen_proxy_get_type ())
#define GP_SCREENSAVER_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GP_TYPE_SCREENSAVER_GEN_PROXY, GpScreensaverGenProxy))
#define GP_SCREENSAVER_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GP_TYPE_SCREENSAVER_GEN_PROXY, GpScreensaverGenProxyClass))
#define GP_SCREENSAVER_GEN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GP_TYPE_SCREENSAVER_GEN_PROXY, GpScreensaverGenProxyClass))
#define GP_IS_SCREENSAVER_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GP_TYPE_SCREENSAVER_GEN_PROXY))
#define GP_IS_SCREENSAVER_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GP_TYPE_SCREENSAVER_GEN_PROXY))

typedef struct _GpScreensaverGenProxy GpScreensaverGenProxy;
typedef struct _GpScreensaverGenProxyClass GpScreensaverGenProxyClass;
typedef struct _GpScreensaverGenProxyPrivate GpScreensaverGenProxyPrivate;

struct _GpScreensaverGenProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GpScreensaverGenProxyPrivate *priv;
};

struct _GpScreensaverGenProxyClass
{
  GDBusProxyClass parent_class;
};

GType gp_screensaver_gen_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GpScreensaverGenProxy, g_object_unref)
#endif

void gp_screensaver_gen_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GpScreensaverGen *gp_screensaver_gen_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GpScreensaverGen *gp_screensaver_gen_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gp_screensaver_gen_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GpScreensaverGen *gp_screensaver_gen_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GpScreensaverGen *gp_screensaver_gen_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GP_TYPE_SCREENSAVER_GEN_SKELETON (gp_screensaver_gen_skeleton_get_type ())
#define GP_SCREENSAVER_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GP_TYPE_SCREENSAVER_GEN_SKELETON, GpScreensaverGenSkeleton))
#define GP_SCREENSAVER_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GP_TYPE_SCREENSAVER_GEN_SKELETON, GpScreensaverGenSkeletonClass))
#define GP_SCREENSAVER_GEN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GP_TYPE_SCREENSAVER_GEN_SKELETON, GpScreensaverGenSkeletonClass))
#define GP_IS_SCREENSAVER_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GP_TYPE_SCREENSAVER_GEN_SKELETON))
#define GP_IS_SCREENSAVER_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GP_TYPE_SCREENSAVER_GEN_SKELETON))

typedef struct _GpScreensaverGenSkeleton GpScreensaverGenSkeleton;
typedef struct _GpScreensaverGenSkeletonClass GpScreensaverGenSkeletonClass;
typedef struct _GpScreensaverGenSkeletonPrivate GpScreensaverGenSkeletonPrivate;

struct _GpScreensaverGenSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GpScreensaverGenSkeletonPrivate *priv;
};

struct _GpScreensaverGenSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gp_screensaver_gen_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GpScreensaverGenSkeleton, g_object_unref)
#endif

GpScreensaverGen *gp_screensaver_gen_skeleton_new (void);


G_END_DECLS

#endif /* __GP_SCREENSAVER_GEN_H__ */
