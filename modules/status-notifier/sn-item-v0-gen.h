/*
 * Generated by gdbus-codegen 2.57.2 from org.kde.StatusNotifierItem.xml. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __SN_ITEM_V0_GEN_H__
#define __SN_ITEM_V0_GEN_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.kde.StatusNotifierItem */

#define SN_TYPE_ITEM_V0_GEN (sn_item_v0_gen_get_type ())
#define SN_ITEM_V0_GEN(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SN_TYPE_ITEM_V0_GEN, SnItemV0Gen))
#define SN_IS_ITEM_V0_GEN(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SN_TYPE_ITEM_V0_GEN))
#define SN_ITEM_V0_GEN_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), SN_TYPE_ITEM_V0_GEN, SnItemV0GenIface))

struct _SnItemV0Gen;
typedef struct _SnItemV0Gen SnItemV0Gen;
typedef struct _SnItemV0GenIface SnItemV0GenIface;

struct _SnItemV0GenIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_activate) (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_x,
    gint arg_y);

  gboolean (*handle_context_menu) (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_x,
    gint arg_y);

  gboolean (*handle_scroll) (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_delta,
    const gchar *arg_orientation);

  gboolean (*handle_secondary_activate) (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation,
    gint arg_x,
    gint arg_y);

  const gchar * (*get_attention_icon_name) (SnItemV0Gen *object);

  GVariant * (*get_attention_icon_pixmap) (SnItemV0Gen *object);

  const gchar * (*get_attention_movie_name) (SnItemV0Gen *object);

  const gchar * (*get_category) (SnItemV0Gen *object);

  const gchar * (*get_icon_name) (SnItemV0Gen *object);

  GVariant * (*get_icon_pixmap) (SnItemV0Gen *object);

  const gchar * (*get_icon_theme_path) (SnItemV0Gen *object);

  const gchar * (*get_id) (SnItemV0Gen *object);

  gboolean  (*get_item_is_menu) (SnItemV0Gen *object);

  const gchar * (*get_menu) (SnItemV0Gen *object);

  const gchar * (*get_overlay_icon_name) (SnItemV0Gen *object);

  GVariant * (*get_overlay_icon_pixmap) (SnItemV0Gen *object);

  const gchar * (*get_status) (SnItemV0Gen *object);

  const gchar * (*get_title) (SnItemV0Gen *object);

  GVariant * (*get_tool_tip) (SnItemV0Gen *object);

  guint  (*get_window_id) (SnItemV0Gen *object);

  void (*new_attention_icon) (
    SnItemV0Gen *object);

  void (*new_icon) (
    SnItemV0Gen *object);

  void (*new_icon_theme_path) (
    SnItemV0Gen *object,
    const gchar *arg_icon_theme_path);

  void (*new_overlay_icon) (
    SnItemV0Gen *object);

  void (*new_status) (
    SnItemV0Gen *object,
    const gchar *arg_status);

  void (*new_title) (
    SnItemV0Gen *object);

  void (*new_tool_tip) (
    SnItemV0Gen *object);

};

GType sn_item_v0_gen_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *sn_item_v0_gen_interface_info (void);
guint sn_item_v0_gen_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void sn_item_v0_gen_complete_context_menu (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation);

void sn_item_v0_gen_complete_activate (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation);

void sn_item_v0_gen_complete_secondary_activate (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation);

void sn_item_v0_gen_complete_scroll (
    SnItemV0Gen *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void sn_item_v0_gen_emit_new_title (
    SnItemV0Gen *object);

void sn_item_v0_gen_emit_new_icon (
    SnItemV0Gen *object);

void sn_item_v0_gen_emit_new_attention_icon (
    SnItemV0Gen *object);

void sn_item_v0_gen_emit_new_overlay_icon (
    SnItemV0Gen *object);

void sn_item_v0_gen_emit_new_tool_tip (
    SnItemV0Gen *object);

void sn_item_v0_gen_emit_new_status (
    SnItemV0Gen *object,
    const gchar *arg_status);

void sn_item_v0_gen_emit_new_icon_theme_path (
    SnItemV0Gen *object,
    const gchar *arg_icon_theme_path);



/* D-Bus method calls: */
void sn_item_v0_gen_call_context_menu (
    SnItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sn_item_v0_gen_call_context_menu_finish (
    SnItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean sn_item_v0_gen_call_context_menu_sync (
    SnItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GError **error);

void sn_item_v0_gen_call_activate (
    SnItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sn_item_v0_gen_call_activate_finish (
    SnItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean sn_item_v0_gen_call_activate_sync (
    SnItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GError **error);

void sn_item_v0_gen_call_secondary_activate (
    SnItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sn_item_v0_gen_call_secondary_activate_finish (
    SnItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean sn_item_v0_gen_call_secondary_activate_sync (
    SnItemV0Gen *proxy,
    gint arg_x,
    gint arg_y,
    GCancellable *cancellable,
    GError **error);

void sn_item_v0_gen_call_scroll (
    SnItemV0Gen *proxy,
    gint arg_delta,
    const gchar *arg_orientation,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean sn_item_v0_gen_call_scroll_finish (
    SnItemV0Gen *proxy,
    GAsyncResult *res,
    GError **error);

gboolean sn_item_v0_gen_call_scroll_sync (
    SnItemV0Gen *proxy,
    gint arg_delta,
    const gchar *arg_orientation,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *sn_item_v0_gen_get_category (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_category (SnItemV0Gen *object);
void sn_item_v0_gen_set_category (SnItemV0Gen *object, const gchar *value);

const gchar *sn_item_v0_gen_get_id (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_id (SnItemV0Gen *object);
void sn_item_v0_gen_set_id (SnItemV0Gen *object, const gchar *value);

const gchar *sn_item_v0_gen_get_title (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_title (SnItemV0Gen *object);
void sn_item_v0_gen_set_title (SnItemV0Gen *object, const gchar *value);

const gchar *sn_item_v0_gen_get_status (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_status (SnItemV0Gen *object);
void sn_item_v0_gen_set_status (SnItemV0Gen *object, const gchar *value);

guint sn_item_v0_gen_get_window_id (SnItemV0Gen *object);
void sn_item_v0_gen_set_window_id (SnItemV0Gen *object, guint value);

const gchar *sn_item_v0_gen_get_icon_name (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_icon_name (SnItemV0Gen *object);
void sn_item_v0_gen_set_icon_name (SnItemV0Gen *object, const gchar *value);

GVariant *sn_item_v0_gen_get_icon_pixmap (SnItemV0Gen *object);
GVariant *sn_item_v0_gen_dup_icon_pixmap (SnItemV0Gen *object);
void sn_item_v0_gen_set_icon_pixmap (SnItemV0Gen *object, GVariant *value);

const gchar *sn_item_v0_gen_get_overlay_icon_name (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_overlay_icon_name (SnItemV0Gen *object);
void sn_item_v0_gen_set_overlay_icon_name (SnItemV0Gen *object, const gchar *value);

GVariant *sn_item_v0_gen_get_overlay_icon_pixmap (SnItemV0Gen *object);
GVariant *sn_item_v0_gen_dup_overlay_icon_pixmap (SnItemV0Gen *object);
void sn_item_v0_gen_set_overlay_icon_pixmap (SnItemV0Gen *object, GVariant *value);

const gchar *sn_item_v0_gen_get_attention_icon_name (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_attention_icon_name (SnItemV0Gen *object);
void sn_item_v0_gen_set_attention_icon_name (SnItemV0Gen *object, const gchar *value);

GVariant *sn_item_v0_gen_get_attention_icon_pixmap (SnItemV0Gen *object);
GVariant *sn_item_v0_gen_dup_attention_icon_pixmap (SnItemV0Gen *object);
void sn_item_v0_gen_set_attention_icon_pixmap (SnItemV0Gen *object, GVariant *value);

const gchar *sn_item_v0_gen_get_attention_movie_name (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_attention_movie_name (SnItemV0Gen *object);
void sn_item_v0_gen_set_attention_movie_name (SnItemV0Gen *object, const gchar *value);

GVariant *sn_item_v0_gen_get_tool_tip (SnItemV0Gen *object);
GVariant *sn_item_v0_gen_dup_tool_tip (SnItemV0Gen *object);
void sn_item_v0_gen_set_tool_tip (SnItemV0Gen *object, GVariant *value);

const gchar *sn_item_v0_gen_get_icon_theme_path (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_icon_theme_path (SnItemV0Gen *object);
void sn_item_v0_gen_set_icon_theme_path (SnItemV0Gen *object, const gchar *value);

const gchar *sn_item_v0_gen_get_menu (SnItemV0Gen *object);
gchar *sn_item_v0_gen_dup_menu (SnItemV0Gen *object);
void sn_item_v0_gen_set_menu (SnItemV0Gen *object, const gchar *value);

gboolean sn_item_v0_gen_get_item_is_menu (SnItemV0Gen *object);
void sn_item_v0_gen_set_item_is_menu (SnItemV0Gen *object, gboolean value);


/* ---- */

#define SN_TYPE_ITEM_V0_GEN_PROXY (sn_item_v0_gen_proxy_get_type ())
#define SN_ITEM_V0_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SN_TYPE_ITEM_V0_GEN_PROXY, SnItemV0GenProxy))
#define SN_ITEM_V0_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SN_TYPE_ITEM_V0_GEN_PROXY, SnItemV0GenProxyClass))
#define SN_ITEM_V0_GEN_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SN_TYPE_ITEM_V0_GEN_PROXY, SnItemV0GenProxyClass))
#define SN_IS_ITEM_V0_GEN_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SN_TYPE_ITEM_V0_GEN_PROXY))
#define SN_IS_ITEM_V0_GEN_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SN_TYPE_ITEM_V0_GEN_PROXY))

typedef struct _SnItemV0GenProxy SnItemV0GenProxy;
typedef struct _SnItemV0GenProxyClass SnItemV0GenProxyClass;
typedef struct _SnItemV0GenProxyPrivate SnItemV0GenProxyPrivate;

struct _SnItemV0GenProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  SnItemV0GenProxyPrivate *priv;
};

struct _SnItemV0GenProxyClass
{
  GDBusProxyClass parent_class;
};

GType sn_item_v0_gen_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SnItemV0GenProxy, g_object_unref)
#endif

void sn_item_v0_gen_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SnItemV0Gen *sn_item_v0_gen_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
SnItemV0Gen *sn_item_v0_gen_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void sn_item_v0_gen_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
SnItemV0Gen *sn_item_v0_gen_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
SnItemV0Gen *sn_item_v0_gen_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define SN_TYPE_ITEM_V0_GEN_SKELETON (sn_item_v0_gen_skeleton_get_type ())
#define SN_ITEM_V0_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), SN_TYPE_ITEM_V0_GEN_SKELETON, SnItemV0GenSkeleton))
#define SN_ITEM_V0_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), SN_TYPE_ITEM_V0_GEN_SKELETON, SnItemV0GenSkeletonClass))
#define SN_ITEM_V0_GEN_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), SN_TYPE_ITEM_V0_GEN_SKELETON, SnItemV0GenSkeletonClass))
#define SN_IS_ITEM_V0_GEN_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), SN_TYPE_ITEM_V0_GEN_SKELETON))
#define SN_IS_ITEM_V0_GEN_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), SN_TYPE_ITEM_V0_GEN_SKELETON))

typedef struct _SnItemV0GenSkeleton SnItemV0GenSkeleton;
typedef struct _SnItemV0GenSkeletonClass SnItemV0GenSkeletonClass;
typedef struct _SnItemV0GenSkeletonPrivate SnItemV0GenSkeletonPrivate;

struct _SnItemV0GenSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  SnItemV0GenSkeletonPrivate *priv;
};

struct _SnItemV0GenSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType sn_item_v0_gen_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SnItemV0GenSkeleton, g_object_unref)
#endif

SnItemV0Gen *sn_item_v0_gen_skeleton_new (void);


G_END_DECLS

#endif /* __SN_ITEM_V0_GEN_H__ */
